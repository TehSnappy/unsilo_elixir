#!/usr/bin/env bash

APP="unsilo"

BUILD_HOST="sfuchs.fyi" # host where to build the release
BUILD_USER="sfuchs" # local user at build host
BUILD_AT="/home/sfuchs/unsilo_builds/unsilo" # build directory on build host

STAGING_HOSTS="test1.acme.org test2.acme.org" # staging / test hosts separated by space
STAGING_USER="test" # local user at staging hosts
TEST_AT="/test/my-erlang-app" # deploy directory on staging hosts. default is DELIVER_TO

PRODUCTION_HOSTS="sfuchs.fyi" # deploy / production hosts separated by space
PRODUCTION_USER="sfuchs" # local user at deploy hosts
DELIVER_TO="/home/sfuchs/" # deploy directory on production hosts

ECTO_REPOSITORY="Unsilo.Repo"

pre_init_app_remotely() {
  # store current value to be able to restore it later
  ACTUAL_PROJECT_DIR="$DELIVER_TO"
  # set the build directory to the parent directory of the
  # app (sub) directory for git operations
  DELIVER_TO="$(dirname $DELIVER_TO)"
  # repeat that for each subdir-level
}

pre_erlang_get_and_update_deps() {
 # restore build directory including subdir for building
 DELIVER_TO="$ACTUAL_PROJECT_DIR" 

  local _prod_secret_path="/home/sfuchs/unsilo/prod.secret.exs"
  if [ "$TARGET_MIX_ENV" = "prod" ]; then
    __sync_remote "
      ln -sfn '$_prod_secret_path' '$BUILD_AT/config/prod.secret.exs'
      ln -sfn '/home/sfuchs/unsilo/uploads/' '$BUILD_AT/priv/static/images/'
    "
  fi
}
